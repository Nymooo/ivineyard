@*@using Model.Entities.Bookingobjects.Vineyard
@using WebGUI.Client.Services
@inject IJSRuntime JsRuntime
@inject VineyardService service;

<style>
    .bottom-menu {
        position: fixed;
        z-index:1002;    
        bottom: -20vh;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        transition: bottom 0.5s ease-in-out; /* Übergang für das Aufsteigen */
        background-color: transparent;  
    }

    .bottom-menu.visible {
        bottom: 0   ;
    }
    
    .burger-button {
        position: relative;
        left: 15px;
        margin-bottom: 15px;
        z-index: 1001;
        background-color: #ffffff;
        margin: 5px 0px 15px 5px;
        
        
    }
    
    .menu-content {
        background-color: transparent;
        height: 20vh;
        padding: 15px;
        overflow: auto;
    }
</style>


<div class="bottom-menu @(_isMenuVisible ? "visible" : "") w-100">
    <MudButton Class="burger-button" OnClick="Slide"  ButtonType="ButtonType.Button" ><MudIcon Icon="@Icons.Material.Filled.Menu" /></MudButton>
    <div class="w-100 menu-content d-flex flex-row">
        @foreach(var i in vineyards)
        {
        <MudCard Style="height: 100%; min-width: 30%; margin: 0 10px 5px 5px" Elevation="0" Class="shadow-lg rounded-2">
            <MudCardHeader class="d-flex flex-column justify-content-center" Style="background-color: #D7F6CD">
                <MudText Typo="Typo.h6">@i.Name</MudText>
            </MudCardHeader>
            <MudCardContent Class="d-flex flex-column" Style="overflow-y: scroll;">
                Größe: 2a
                Trauben: Grüner Vetliner
                letzter Status: Gespritzt
            </MudCardContent>
        </MudCard>
        }
        
    </div>
</div>

@code
{
    private bool _isMenuVisible = false;
    private string _text = "Dies ist ein Menü";
    protected List<Vineyard> vineyards = new ();
    private IJSObjectReference? _module;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (JsRuntime is not null)
            {
                var dotNetObjectReference = DotNetObjectReference.Create(this);
                _module = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./map.js");
                if (_module is not null)
                {
                    vineyards = await service.GetVineyardsAsync();
                }
            }
        }
    }
    private void Slide()
    {
        _isMenuVisible = !_isMenuVisible;
        _text = "Button Clicked!";
    }
}*@